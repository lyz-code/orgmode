name: Sync Fork with Upstream

on:
  schedule:
    # Run daily at midnight UTC
    - cron: "0 0 * * *"
  # Optional: Allow manual triggering
  workflow_dispatch:

jobs:
  sync-fork:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Add upstream remote
        run: |
          # Replace the URL below with your upstream repository URL
          git remote add upstream https://github.com/nvim-orgmode/orgmode.git

      - name: Fetch upstream
        run: |
          git fetch upstream

      - name: Merge upstream changes
        run: |
          # Check which branch we're on
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

          # Sync the current branch with upstream
          git merge upstream/$CURRENT_BRANCH --no-edit

      - name: Test PAT validity
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" https://api.github.com/user)
          if [ $STATUS -eq 200 ]; then
            echo "PAT is valid and working"
          else
            echo "PAT authentication failed with status: $STATUS"
          fi
      - name: Check repository permissions
        run: |
          RESP=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" https://api.github.com/repos/${{ github.repository }})
          if echo $RESP | grep -q "permissions"; then
            echo "Repository is accessible with the PAT"
            echo "Has push permission: $(echo $RESP | jq .permissions.push)"
            echo "Has admin permission: $(echo $RESP | jq .permissions.admin)"
          else
            echo "Could not verify repository permissions"
            echo "Response: $RESP"
          fi
      - name: Push changes with explicit authentication
        run: |
          # Configure git with explicit authentication
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # Remove any existing origin
          git remote remove origin

          # Set the new origin with explicit PAT in the URL
          git remote add origin "https://${{ secrets.PERSONAL_TOKEN }}@github.com/${{ github.repository }}.git"

          # Push to the branch
          git push origin HEAD:master
